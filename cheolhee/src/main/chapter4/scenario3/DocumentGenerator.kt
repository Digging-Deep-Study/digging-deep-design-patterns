package main.chapter4.scenario3

import java.io.File
import kotlin.properties.Delegates

abstract class DocumentGenerator(
    protected val filename: String,
) {
    protected var document: String by Delegates.notNull()

    fun generateDocument() {
        createHeader()
        createBody()
        createFooter()
    }

    protected abstract fun createHeader()
    protected abstract fun createBody()
    protected abstract fun createFooter()

    protected fun saveDocument() {
        File(filename).apply {
            if (!exists()) createNewFile()
            writeText(document)
        }
    }
}

class HtmlDocumentGenerator(
    name: String,
) : DocumentGenerator(name) {
    override fun createHeader() {
        document = "<html><head><title>$filename</title></head><body>"
    }

    override fun createBody() {
        document += "<h1>Document Body</h1>"
    }

    override fun createFooter() {
        document += "</body></html>"
        saveDocument()
    }
}

class PdfDocumentGenerator(
    name: String,
) : DocumentGenerator(name) {

    override fun createHeader() {
        document = "%PDF-1.4\n%âãÏÓ\n"
    }

    override fun createBody() {
        document += "1 0 obj\n<< /Type /Catalog >>\nendobj\n"
    }

    override fun createFooter() {
        document += "%%EOF"
        saveDocument()
    }
}

class MarkdownDocumentGenerator(
    name: String,
) : DocumentGenerator(name) {
    override fun createHeader() {
        document = "# $filename\n\n"
    }

    override fun createBody() {
        document += "## Document Body\n\n"
    }

    override fun createFooter() {
        document += "\n---\nGenerated by MarkdownDocumentGenerator"
        saveDocument()
    }
}